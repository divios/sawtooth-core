# Copyright 2019 Cargill Incorporated
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
apiVersion: v1
kind: List

items:

# --------------------------=== pod 0 ===--------------------------

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: pbft-seth-0
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: pbft-seth-0
    template:
      metadata:
        labels:
          name: pbft-seth-0
      spec:
        containers:
          - name: sawtooth-intkey-tp-python
            image: hyperledger/sawtooth-intkey-tp-python:nightly
            command:
              - bash
            args:
              - -c
              - "intkey-tp-python -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-pbft-engine
            image: blockchaintp/sawtooth-pbft-engine:BTP2.1.0
            command:
              - bash
            args:
              - -c
              - "pbft-engine -vv --connect tcp://$HOSTNAME:5050"

          - name: sawtooth-rest-api
            image: blockchaintp/sawtooth-rest-api:BTP2.1.0
            ports:
              - name: api
                containerPort: 8008
            command:
              - bash
            args:
              - -c
              - "sawtooth-rest-api -vv -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008"
            readinessProbe:
              httpGet:
                path: /status
                port: 8008
              initialDelaySeconds: 15
              periodSeconds: 10

          - name: sawtooth-settings-tp
            image: blockchaintp/sawtooth-settings-tp:BTP2.1.0
            command:
              - bash
            args:
              - -c
              - "settings-tp -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-shell
            image: blockchaintp/sawtooth-shell:BTP2.1.0
            command:
              - bash
            args:
              - -c
              - "sawtooth keygen && tail -f /dev/null"

          - name: sawtooth-seth-tp
            image: blockchaintp/sawtooth-seth-tp:BTP2.1.0rc13-0.2.3p1
            command:
              - bash
            args:
              - -c
              - "seth-tp -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-seth-rpc
            image: blockchaintp/sawtooth-seth-rpc:BTP2.1.0rc13-0.2.3p1
            command:
              - bash
            args:
              - -c
              - "seth-rpc -vv --connect tcp://$HOSTNAME:4004 --bind 0.0.0.0:3030"

          - name: sawtooth-seth-cli-go
            image: divios/sawtooth-seth-cli-go:0.2.3
            command:
              - bash
            args:
              - -c
              - |
                 while true; do
                    if curl -sSf http://$HOSTNAME:8008/status > /dev/null; then
                      break
                    else
                      echo "Waiting for rest api, retrying in 5 seconds..."
                      sleep 5
                    fi
                 done &&
                 seth init http://$HOSTNAME:8008 &&
                 openssl ecparam -genkey -name secp256k1 | openssl ec -out key-file.pem &&
                 seth account import key-file.pem $HOSTNAME &&
                 seth account create --nonce=0 --wait $HOSTNAME > eth-account.txt &&
                 echo 'Created eth-account successfully' &&
                 tail -f /dev/null

          - name: sawtooth-smallbank-tp-rust
            image: hyperledger/sawtooth-smallbank-tp-rust:nightly
            command:
              - bash
            args:
              - -c
              - "smallbank-tp-rust -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-validator
            image: blockchaintp/sawtooth-validator:BTP2.1.0
            ports:
              - name: tp
                containerPort: 4004
              - name: consensus
                containerPort: 5050
              - name: validators
                containerPort: 8800
            envFrom:
              - configMapRef:
                  name: keys-config
            command:
              - bash
            args:
              - -c
              - |
                  if [ ! -e /etc/sawtooth/keys/validator.priv ]; then
                    echo $pbft0priv > /etc/sawtooth/keys/validator.priv
                    echo $pbft0pub > /etc/sawtooth/keys/validator.pub
                  fi &&
                  if [ ! -e /root/.sawtooth/keys/my_key.priv ]; then
                    sawtooth keygen my_key
                  fi &&
                  if [ ! -e config-genesis.batch ]; then
                    sawset genesis -k /root/.sawtooth/keys/my_key.priv -o config-genesis.batch
                  fi &&
                  sleep 10 &&
                  echo sawtooth.consensus.pbft.members=["\"$pbft0pub\",\"$pbft1pub\",\"$pbft2pub\",\"$pbft3pub\",\"$pbft4pub\""] &&
                  if [ ! -e config.batch ]; then
                    sawset proposal create \
                      -k /root/.sawtooth/keys/my_key.priv \
                      sawtooth.consensus.algorithm.name=pbft \
                      sawtooth.consensus.algorithm.version=1.0\
                      sawtooth.consensus.pbft.members=["\"$pbft0pub\",\"$pbft1pub\",\"$pbft2pub\",\"$pbft3pub\",\"$pbft4pub\""] \
                      sawtooth.publisher.max_batches_per_block=1200 \
                      -o config.batch
                  fi && \
                  if [ ! -e /var/lib/sawtooth/genesis.batch ]; then
                    sawadm genesis config-genesis.batch config.batch
                  fi &&
                  while [ ! -e /poet-shared/validator.toml ]; do
                    echo 'Waiting for retriever' &&
                    sleep 1
                  done &&
                  cp -a /poet-shared/validator.toml /etc/sawtooth &&
                  sawtooth-validator -vv \
                    --endpoint tcp://$SAWTOOTH_SETH_0_SERVICE_HOST:8800 \
                    --bind component:tcp://eth0:4004 \
                    --bind consensus:tcp://eth0:5050 \
                    --bind network:tcp://eth0:8800 \
                    --scheduler parallel \
                    --peering static \
                    --maximum-peer-connectivity 10000

            volumeMounts:
              - name: poet-shared-0
                mountPath: "/poet-shared"

          - name: sawtooth-xo-tp-python
            image: hyperledger/sawtooth-xo-tp-python:nightly
            command:
              - bash
            args:
              - -c
              - "xo-tp-python -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-discovery-client
            image: divios/tfg-discovery-client:python-1.1
            command:
              - bash
            args:
              - -c
              - |
                  export HOST=$SAWTOOTH_SETH_0_SERVICE_HOST &&
                  gunicorn app.main:app
            env:
              - name: PORT_EUREKA
                value: '8800'
              - name: APP_NAME
                value: sawtooth-node
              - name: REMOTE
                value: http://discovery-server-service.edge.svc.cluster.local:8761

          - name: sawtooth-discovery-retriever
            image: divios/tfg-discovery-retriever:1.1
            command:
              - bash
            args:
              - -c
              - |
                  export OWN_HOST=$SAWTOOTH_SETH_0_SERVICE_HOST &&
                  python3 app/retriever.py &&
                  cat /poet-shared/validator.toml &&
                  tail -f /dev/null
            env:
              - name: OUTPUT_FILE
                value: '/poet-shared/validator.toml'
            volumeMounts:
                - name: poet-shared-0
                  mountPath: "/poet-shared"

        volumes:
          - name: poet-shared-0
            emptyDir: {}

- apiVersion: v1
  kind: Service
  metadata:
    name: sawtooth-seth-0
  spec:
    type: ClusterIP
    selector:
      name: pbft-seth-0
    ports:
      - name: "4004"
        protocol: TCP
        port: 4004
        targetPort: 4004
      - name: "5050"
        protocol: TCP
        port: 5050
        targetPort: 5050
      - name: "8008"
        protocol: TCP
        port: 8008
        targetPort: 8008
      - name: "8080"
        protocol: TCP
        port: 8080
        targetPort: 8080
      - name: "8800"
        protocol: TCP
        port: 8800
        targetPort: 8800


# --------------------------=== pod 1 ===--------------------------

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: pbft-seth-1
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: pbft-seth-1
    template:
      metadata:
        labels:
          name: pbft-seth-1
      spec:
        containers:
          - name: sawtooth-intkey-tp-python
            image: hyperledger/sawtooth-intkey-tp-python:nightly
            command:
              - bash
            args:
              - -c
              - "intkey-tp-python -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-pbft-engine
            image: blockchaintp/sawtooth-pbft-engine:BTP2.1.0
            command:
              - bash
            args:
              - -c
              - "pbft-engine -vv --connect tcp://$HOSTNAME:5050"

          - name: sawtooth-rest-api
            image: blockchaintp/sawtooth-rest-api:BTP2.1.0
            ports:
              - name: api
                containerPort: 8008
            command:
              - bash
            args:
              - -c
              - "sawtooth-rest-api -vv -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008"
            readinessProbe:
              httpGet:
                path: /status
                port: 8008
              initialDelaySeconds: 15
              periodSeconds: 10

          - name: sawtooth-settings-tp
            image: blockchaintp/sawtooth-settings-tp:BTP2.1.0
            command:
              - bash
            args:
              - -c
              - "settings-tp -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-shell
            image: blockchaintp/sawtooth-shell:BTP2.1.0
            command:
              - bash
            args:
              - -c
              - "sawtooth keygen && tail -f /dev/null"

          - name: sawtooth-seth-tp
            image: blockchaintp/sawtooth-seth-tp:BTP2.1.0rc13-0.2.3p1
            command:
              - bash
            args:
              - -c
              - "seth-tp -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-seth-rpc
            image: blockchaintp/sawtooth-seth-rpc:BTP2.1.0rc13-0.2.3p1
            command:
              - bash
            args:
              - -c
              - "seth-rpc -vv --connect tcp://$HOSTNAME:4004 --bind 0.0.0.0:3030"

          - name: sawtooth-seth-cli-go
            image: divios/sawtooth-seth-cli-go:0.2.3
            command:
              - bash
            args:
              - -c
              - |
                 while true; do
                    if curl -sSf http://$HOSTNAME:8008/status > /dev/null; then
                      break
                    else
                      echo "Waiting for rest api, retrying in 5 seconds..."
                      sleep 5
                    fi
                 done &&
                 seth init http://$HOSTNAME:8008 &&
                 openssl ecparam -genkey -name secp256k1 | openssl ec -out key-file.pem &&
                 seth account import key-file.pem $HOSTNAME &&
                 seth account create --nonce=0 --wait $HOSTNAME > eth-account.txt &&
                 echo 'Created eth-account successfully' &&
                 tail -f /dev/null

          - name: sawtooth-smallbank-tp-rust
            image: hyperledger/sawtooth-smallbank-tp-rust:nightly
            command:
              - bash
            args:
              - -c
              - "smallbank-tp-rust -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-validator
            image: blockchaintp/sawtooth-validator:BTP2.1.0
            ports:
              - name: tp
                containerPort: 4004
              - name: consensus
                containerPort: 5050
              - name: validators
                containerPort: 8800
            env:
              - name: pbft1priv
                valueFrom:
                  configMapKeyRef:
                    name: keys-config
                    key: pbft1priv
              - name: pbft1pub
                valueFrom:
                  configMapKeyRef:
                    name: keys-config
                    key: pbft1pub
            command:
              - bash
            args:
              - -c
              - |
                  if [ ! -e /etc/sawtooth/keys/validator.priv ]; then
                    echo $pbft1priv > /etc/sawtooth/keys/validator.priv
                    echo $pbft1pub > /etc/sawtooth/keys/validator.pub
                  fi &&
                  sawtooth keygen my_key &&
                  while [ ! -e /poet-shared/validator.toml ]; do
                    echo 'Waiting for retriever' &&
                    sleep 1
                  done &&
                  cp -a /poet-shared/validator.toml /etc/sawtooth &&
                  sawtooth-validator -vv \
                    --endpoint tcp://$SAWTOOTH_SETH_1_SERVICE_HOST:8800 \
                    --bind component:tcp://eth0:4004 \
                    --bind consensus:tcp://eth0:5050 \
                    --bind network:tcp://eth0:8800 \
                    --scheduler parallel \
                    --peering static \
                    --maximum-peer-connectivity 10000

            volumeMounts:
              - name: poet-shared-1
                mountPath: "/poet-shared"

          - name: sawtooth-xo-tp-python
            image: hyperledger/sawtooth-xo-tp-python:nightly
            command:
              - bash
            args:
              - -c
              - "xo-tp-python -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-discovery-client
            image: divios/tfg-discovery-client:python-1.1
            command:
              - bash
            args:
              - -c
              - |
                  export HOST=$SAWTOOTH_SETH_1_SERVICE_HOST &&
                  gunicorn app.main:app
            env:
              - name: PORT_EUREKA
                value: '8800'
              - name: APP_NAME
                value: sawtooth-node
              - name: REMOTE
                value: http://discovery-server-service.edge.svc.cluster.local:8761

          - name: sawtooth-discovery-retriever
            image: divios/tfg-discovery-retriever:1.1
            command:
              - bash
            args:
              - -c
              - |
                  export OWN_HOST=$SAWTOOTH_SETH_1_SERVICE_HOST &&
                  python3 app/retriever.py &&
                  cat /poet-shared/validator.toml &&
                  tail -f /dev/null
            env:
              - name: OUTPUT_FILE
                value: '/poet-shared/validator.toml'
            volumeMounts:
                - name: poet-shared-1
                  mountPath: "/poet-shared"

        volumes:
          - name: poet-shared-1
            emptyDir: {}


- apiVersion: v1
  kind: Service
  metadata:
    name: sawtooth-seth-1
  spec:
    type: ClusterIP
    selector:
      name: pbft-seth-1
    ports:
      - name: "4004"
        protocol: TCP
        port: 4004
        targetPort: 4004
      - name: "5050"
        protocol: TCP
        port: 5050
        targetPort: 5050
      - name: "8008"
        protocol: TCP
        port: 8008
        targetPort: 8008
      - name: "8080"
        protocol: TCP
        port: 8080
        targetPort: 8080
      - name: "8800"
        protocol: TCP
        port: 8800
        targetPort: 8800

# --------------------------=== pod 2 ===--------------------------

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: pbft-seth-2
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: pbft-seth-2
    template:
      metadata:
        labels:
          name: pbft-seth-2
      spec:
        containers:
          - name: sawtooth-intkey-tp-python
            image: hyperledger/sawtooth-intkey-tp-python:nightly
            command:
              - bash
            args:
              - -c
              - "intkey-tp-python -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-pbft-engine
            image: blockchaintp/sawtooth-pbft-engine:BTP2.1.0
            command:
              - bash
            args:
              - -c
              - "pbft-engine -vv --connect tcp://$HOSTNAME:5050"

          - name: sawtooth-rest-api
            image: blockchaintp/sawtooth-rest-api:BTP2.1.0
            ports:
              - name: api
                containerPort: 8008
            command:
              - bash
            args:
              - -c
              - "sawtooth-rest-api -vv -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008"
            readinessProbe:
              httpGet:
                path: /status
                port: 8008
              initialDelaySeconds: 30
              periodSeconds: 10

          - name: sawtooth-settings-tp
            image: blockchaintp/sawtooth-settings-tp:BTP2.1.0
            command:
              - bash
            args:
              - -c
              - "settings-tp -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-shell
            image: blockchaintp/sawtooth-shell:BTP2.1.0
            command:
              - bash
            args:
              - -c
              - "sawtooth keygen && tail -f /dev/null"

          - name: sawtooth-seth-tp
            image: blockchaintp/sawtooth-seth-tp:BTP2.1.0rc13-0.2.3p1
            command:
              - bash
            args:
              - -c
              - "seth-tp -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-seth-rpc
            image: blockchaintp/sawtooth-seth-rpc:BTP2.1.0rc13-0.2.3p1
            command:
              - bash
            args:
              - -c
              - "seth-rpc -vv --connect tcp://$HOSTNAME:4004 --bind 0.0.0.0:3030"

          - name: sawtooth-seth-cli-go
            image: divios/sawtooth-seth-cli-go:0.2.3
            command:
              - bash
            args:
              - -c
              - |
                 while true; do
                    if curl -sSf http://$HOSTNAME:8008/status > /dev/null; then
                      break
                    else
                      echo "Waiting for rest api, retrying in 5 seconds..."
                      sleep 5
                    fi
                 done &&
                 seth init http://$HOSTNAME:8008 &&
                 openssl ecparam -genkey -name secp256k1 | openssl ec -out key-file.pem &&
                 seth account import key-file.pem $HOSTNAME &&
                 seth account create --nonce=0 --wait $HOSTNAME > eth-account.txt &&
                 echo 'Created eth-account successfully' &&
                 tail -f /dev/null

          - name: sawtooth-smallbank-tp-rust
            image: hyperledger/sawtooth-smallbank-tp-rust:nightly
            command:
              - bash
            args:
              - -c
              - "smallbank-tp-rust -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-validator
            image: blockchaintp/sawtooth-validator:BTP2.1.0
            ports:
              - name: tp
                containerPort: 4004
              - name: consensus
                containerPort: 5050
              - name: validators
                containerPort: 8800
            env:
              - name: pbft2priv
                valueFrom:
                  configMapKeyRef:
                    name: keys-config
                    key: pbft2priv
              - name: pbft2pub
                valueFrom:
                  configMapKeyRef:
                    name: keys-config
                    key: pbft1pub
            command:
              - bash
            args:
              - -c
              - |
                  if [ ! -e /etc/sawtooth/keys/validator.priv ]; then
                    echo $pbft2priv > /etc/sawtooth/keys/validator.priv
                    echo $pbft2pub > /etc/sawtooth/keys/validator.pub
                  fi &&
                  sawtooth keygen my_key &&
                  while [ ! -e /poet-shared/validator.toml ]; do
                    echo 'Waiting for retriever' &&
                    sleep 1
                  done &&
                  cp -a /poet-shared/validator.toml /etc/sawtooth &&
                  sawtooth-validator -vv \
                    --endpoint tcp://$SAWTOOTH_SETH_2_SERVICE_HOST:8800 \
                    --bind component:tcp://eth0:4004 \
                    --bind consensus:tcp://eth0:5050 \
                    --bind network:tcp://eth0:8800 \
                    --scheduler parallel \
                    --peering static \
                    --maximum-peer-connectivity 10000

            volumeMounts:
                - name: poet-shared-2
                  mountPath: "/poet-shared"

          - name: sawtooth-xo-tp-python
            image: hyperledger/sawtooth-xo-tp-python:nightly
            command:
              - bash
            args:
              - -c
              - "xo-tp-python -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-discovery-client
            image: divios/tfg-discovery-client:python-1.1
            command:
              - bash
            args:
              - -c
              - |
                  export HOST=$SAWTOOTH_SETH_2_SERVICE_HOST &&
                  gunicorn app.main:app
            env:
              - name: PORT_EUREKA
                value: '8800'
              - name: APP_NAME
                value: sawtooth-node
              - name: REMOTE
                value: http://discovery-server-service.edge.svc.cluster.local:8761

          - name: sawtooth-discovery-retriever
            image: divios/tfg-discovery-retriever:1.1
            command:
              - bash
            args:
              - -c
              - |
                  export OWN_HOST=$SAWTOOTH_SETH_2_SERVICE_HOST &&
                  python3 app/retriever.py &&
                  cat /poet-shared/validator.toml &&
                  tail -f /dev/null
            env:
              - name: OUTPUT_FILE
                value: '/poet-shared/validator.toml'
            volumeMounts:
                - name: poet-shared-2
                  mountPath: "/poet-shared"

        volumes:
          - name: poet-shared-2
            emptyDir: {}

- apiVersion: v1
  kind: Service
  metadata:
    name: sawtooth-seth-2
  spec:
    type: ClusterIP
    selector:
      name: pbft-seth-2
    ports:
      - name: "4004"
        protocol: TCP
        port: 4004
        targetPort: 4004
      - name: "5050"
        protocol: TCP
        port: 5050
        targetPort: 5050
      - name: "8008"
        protocol: TCP
        port: 8008
        targetPort: 8008
      - name: "8080"
        protocol: TCP
        port: 8080
        targetPort: 8080
      - name: "8800"
        protocol: TCP
        port: 8800
        targetPort: 8800


# --------------------------=== pod 3 ===--------------------------

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: pbft-seth-3
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: pbft-seth-3
    template:
      metadata:
        labels:
          name: pbft-seth-3
      spec:
        containers:
          - name: sawtooth-intkey-tp-python
            image: hyperledger/sawtooth-intkey-tp-python:nightly
            command:
              - bash
            args:
              - -c
              - "intkey-tp-python -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-pbft-engine
            image: blockchaintp/sawtooth-pbft-engine:BTP2.1.0
            command:
              - bash
            args:
              - -c
              - "pbft-engine -vv --connect tcp://$HOSTNAME:5050"

          - name: sawtooth-rest-api
            image: blockchaintp/sawtooth-rest-api:BTP2.1.0
            ports:
              - name: api
                containerPort: 8008
            command:
              - bash
            args:
              - -c
              - "sawtooth-rest-api -vv -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008"
            readinessProbe:
              httpGet:
                path: /status
                port: 8008
              initialDelaySeconds: 15
              periodSeconds: 10

          - name: sawtooth-settings-tp
            image: blockchaintp/sawtooth-settings-tp:BTP2.1.0
            command:
              - bash
            args:
              - -c
              - "settings-tp -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-shell
            image: blockchaintp/sawtooth-shell:BTP2.1.0
            command:
              - bash
            args:
              - -c
              - "sawtooth keygen && tail -f /dev/null"

          - name: sawtooth-seth-tp
            image: blockchaintp/sawtooth-seth-tp:BTP2.1.0rc13-0.2.3p1
            command:
              - bash
            args:
              - -c
              - "seth-tp -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-seth-rpc
            image: blockchaintp/sawtooth-seth-rpc:BTP2.1.0rc13-0.2.3p1
            command:
              - bash
            args:
              - -c
              - "seth-rpc -vv --connect tcp://$HOSTNAME:4004 --bind 0.0.0.0:3030"

          - name: sawtooth-seth-cli-go
            image: divios/sawtooth-seth-cli-go:0.2.3
            command:
              - bash
            args:
              - -c
              - |
                 while true; do
                    if curl -sSf http://$HOSTNAME:8008/status > /dev/null; then
                      break
                    else
                      echo "Waiting for rest api, retrying in 5 seconds..."
                      sleep 5
                    fi
                 done &&
                 seth init http://$HOSTNAME:8008 &&
                 openssl ecparam -genkey -name secp256k1 | openssl ec -out key-file.pem &&
                 seth account import key-file.pem $HOSTNAME &&
                 seth account create --nonce=0 --wait $HOSTNAME > eth-account.txt &&
                 echo 'Created eth-account successfully' &&
                 tail -f /dev/null

          - name: sawtooth-smallbank-tp-rust
            image: hyperledger/sawtooth-smallbank-tp-rust:nightly
            command:
              - bash
            args:
              - -c
              - "smallbank-tp-rust -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-validator
            image: blockchaintp/sawtooth-validator:BTP2.1.0
            ports:
              - name: tp
                containerPort: 4004
              - name: consensus
                containerPort: 5050
              - name: validators
                containerPort: 8800
            env:
              - name: pbft3priv
                valueFrom:
                  configMapKeyRef:
                    name: keys-config
                    key: pbft3priv
              - name: pbft3pub
                valueFrom:
                  configMapKeyRef:
                    name: keys-config
                    key: pbft3pub
            command:
              - bash
            args:
              - -c
              - |
                  if [ ! -e /etc/sawtooth/keys/validator.priv ]; then
                    echo $pbft3priv > /etc/sawtooth/keys/validator.priv
                    echo $pbft3pub > /etc/sawtooth/keys/validator.pub
                  fi &&
                  sawtooth keygen my_key &&
                  while [ ! -e /poet-shared/validator.toml ]; do
                    echo 'Waiting for retriever' &&
                    sleep 1
                  done &&
                  cp -a /poet-shared/validator.toml /etc/sawtooth &&
                  sawtooth-validator -vv \
                    --endpoint tcp://$SAWTOOTH_SETH_3_SERVICE_HOST:8800 \
                    --bind component:tcp://eth0:4004 \
                    --bind consensus:tcp://eth0:5050 \
                    --bind network:tcp://eth0:8800 \
                    --scheduler parallel \
                    --peering static \
                    --maximum-peer-connectivity 10000

            volumeMounts:
                - name: poet-shared-3
                  mountPath: "/poet-shared"

          - name: sawtooth-xo-tp-python
            image: hyperledger/sawtooth-xo-tp-python:nightly
            command:
              - bash
            args:
              - -c
              - "xo-tp-python -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-discovery-client
            image: divios/tfg-discovery-client:python-1.1
            command:
              - bash
            args:
              - -c
              - |
                  export HOST=$SAWTOOTH_SETH_3_SERVICE_HOST &&
                  gunicorn app.main:app
            env:
              - name: PORT_EUREKA
                value: '8800'
              - name: APP_NAME
                value: sawtooth-node
              - name: REMOTE
                value: http://discovery-server-service.edge.svc.cluster.local:8761

          - name: sawtooth-discovery-retriever
            image: divios/tfg-discovery-retriever:1.1
            command:
              - bash
            args:
              - -c
              - |
                  export OWN_HOST=$SAWTOOTH_SETH_3_SERVICE_HOST &&
                  python3 app/retriever.py &&
                  cat /poet-shared/validator.toml &&
                  tail -f /dev/null
            env:
              - name: OUTPUT_FILE
                value: '/poet-shared/validator.toml'
            volumeMounts:
                - name: poet-shared-3
                  mountPath: "/poet-shared"

        volumes:
          - name: poet-shared-3
            emptyDir: {}

- apiVersion: v1
  kind: Service
  metadata:
    name: sawtooth-seth-3
  spec:
    type: ClusterIP
    selector:
      name: pbft-seth-3
    ports:
      - name: "4004"
        protocol: TCP
        port: 4004
        targetPort: 4004
      - name: "5050"
        protocol: TCP
        port: 5050
        targetPort: 5050
      - name: "8008"
        protocol: TCP
        port: 8008
        targetPort: 8008
      - name: "8080"
        protocol: TCP
        port: 8080
        targetPort: 8080
      - name: "8800"
        protocol: TCP
        port: 8800
        targetPort: 8800


# --------------------------=== pod 4 ===--------------------------

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: pbft-seth-4
  spec:
    replicas: 1
    selector:
      matchLabels:
        name: pbft-seth-4
    template:
      metadata:
        labels:
          name: pbft-seth-4
      spec:
        containers:
          - name: sawtooth-intkey-tp-python
            image: hyperledger/sawtooth-intkey-tp-python:nightly
            command:
              - bash
            args:
              - -c
              - "intkey-tp-python -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-pbft-engine
            image: blockchaintp/sawtooth-pbft-engine:BTP2.1.0
            command:
              - bash
            args:
              - -c
              - "pbft-engine -vv --connect tcp://$HOSTNAME:5050"

          - name: sawtooth-rest-api
            image: blockchaintp/sawtooth-rest-api:BTP2.1.0
            ports:
              - name: api
                containerPort: 8008
            command:
              - bash
            args:
              - -c
              - "sawtooth-rest-api -vv -C tcp://$HOSTNAME:4004 -B 0.0.0.0:8008"
            readinessProbe:
              httpGet:
                path: /status
                port: 8008
              initialDelaySeconds: 15
              periodSeconds: 10

          - name: sawtooth-settings-tp
            image: blockchaintp/sawtooth-settings-tp:BTP2.1.0
            command:
              - bash
            args:
              - -c
              - "settings-tp -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-shell
            image: blockchaintp/sawtooth-shell:BTP2.1.0
            command:
              - bash
            args:
              - -c
              - "sawtooth keygen && tail -f /dev/null"

          - name: sawtooth-seth-tp
            image: blockchaintp/sawtooth-seth-tp:BTP2.1.0rc13-0.2.3p1
            command:
              - bash
            args:
              - -c
              - "seth-tp -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-seth-rpc
            image: blockchaintp/sawtooth-seth-rpc:BTP2.1.0rc13-0.2.3p1
            command:
              - bash
            args:
              - -c
              - "seth-rpc -vv --connect tcp://$HOSTNAME:4004 --bind 0.0.0.0:3030"

          - name: sawtooth-seth-cli-go
            image: divios/sawtooth-seth-cli-go:0.2.3
            command:
              - bash
            args:
              - -c
              - |
                 while true; do
                    if curl -sSf http://$HOSTNAME:8008/status > /dev/null; then
                      break
                    else
                      echo "Waiting for rest api, retrying in 5 seconds..."
                      sleep 5
                    fi
                 done &&
                 seth init http://$HOSTNAME:8008 &&
                 openssl ecparam -genkey -name secp256k1 | openssl ec -out key-file.pem &&
                 seth account import key-file.pem $HOSTNAME &&
                 seth account create --nonce=0 --wait $HOSTNAME > eth-account.txt &&
                 echo 'Created eth-account successfully' &&
                 tail -f /dev/null

          - name: sawtooth-smallbank-tp-rust
            image: hyperledger/sawtooth-smallbank-tp-rust:nightly
            command:
              - bash
            args:
              - -c
              - "smallbank-tp-rust -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-validator
            image: blockchaintp/sawtooth-validator:BTP2.1.0
            ports:
              - name: tp
                containerPort: 4004
              - name: consensus
                containerPort: 5050
              - name: validators
                containerPort: 8800
            env:
              - name: pbft4priv
                valueFrom:
                  configMapKeyRef:
                    name: keys-config
                    key: pbft4priv
              - name: pbft4pub
                valueFrom:
                  configMapKeyRef:
                    name: keys-config
                    key: pbft4pub
            command:
              - bash
            args:
              - -c
              - |
                  if [ ! -e /etc/sawtooth/keys/validator.priv ]; then
                    echo $pbft4priv > /etc/sawtooth/keys/validator.priv
                    echo $pbft4pub > /etc/sawtooth/keys/validator.pub
                  fi &&
                  sawtooth keygen my_key &&
                  while [ ! -e /poet-shared/validator.toml ]; do
                    echo 'Waiting for retriever' &&
                    sleep 1
                  done &&
                  cp -a /poet-shared/validator.toml /etc/sawtooth &&
                  sawtooth-validator -vv \
                    --endpoint tcp://$SAWTOOTH_SETH_4_SERVICE_HOST:8800 \
                    --bind component:tcp://eth0:4004 \
                    --bind consensus:tcp://eth0:5050 \
                    --bind network:tcp://eth0:8800 \
                    --scheduler parallel \
                    --peering static \
                    --maximum-peer-connectivity 10000

            volumeMounts:
                - name: poet-shared-4
                  mountPath: "/poet-shared"

          - name: sawtooth-xo-tp-python
            image: hyperledger/sawtooth-xo-tp-python:nightly
            command:
              - bash
            args:
              - -c
              - "xo-tp-python -vv -C tcp://$HOSTNAME:4004"

          - name: sawtooth-discovery-client
            image: divios/tfg-discovery-client:python-1.1
            command:
              - bash
            args:
              - -c
              - |
                  export HOST=$SAWTOOTH_SETH_4_SERVICE_HOST &&
                  gunicorn app.main:app
            env:
              - name: PORT_EUREKA
                value: '8800'
              - name: APP_NAME
                value: sawtooth-node
              - name: REMOTE
                value: http://discovery-server-service.edge.svc.cluster.local:8761

          - name: sawtooth-discovery-retriever
            image: divios/tfg-discovery-retriever:1.1
            command:
              - bash
            args:
              - -c
              - |
                  export OWN_HOST=$SAWTOOTH_SETH_4_SERVICE_HOST &&
                  python3 app/retriever.py &&
                  cat /poet-shared/validator.toml &&
                  tail -f /dev/null
            env:
              - name: OUTPUT_FILE
                value: '/poet-shared/validator.toml'
            volumeMounts:
                - name: poet-shared-4
                  mountPath: "/poet-shared"

        volumes:
          - name: poet-shared-4
            emptyDir: {}

- apiVersion: v1
  kind: Service
  metadata:
    name: sawtooth-seth-4
  spec:
    type: ClusterIP
    selector:
      name: pbft-seth-4
    ports:
      - name: "4004"
        protocol: TCP
        port: 4004
        targetPort: 4004
      - name: "5050"
        protocol: TCP
        port: 5050
        targetPort: 5050
      - name: "8008"
        protocol: TCP
        port: 8008
        targetPort: 8008
      - name: "8080"
        protocol: TCP
        port: 8080
        targetPort: 8080
      - name: "8800"
        protocol: TCP
        port: 8800
        targetPort: 8800
